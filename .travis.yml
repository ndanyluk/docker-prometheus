sudo: required

language: generic

services:
  - docker

env:
  global:
    - target_version=2.15.1
    - target_platform=linux
    - qemu_version=4.2.0-6
  matrix:
    - target_arch=amd64 qemu_arch=x86_64
    - target_arch=armv7 qemu_arch=arm
    - target_arch=armv6 qemu_arch=arm
    - target_arch=arm64 qemu_arch=aarch64

before_install:
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get -y install docker-ce
  - mkdir $HOME/.docker
  - 'echo "{" > $HOME/.docker/config.json'
  - 'echo "  \"experimental\": \"enabled\"" >> $HOME/.docker/config.json'
  - 'echo "}" >> $HOME/.docker/config.json'
  - sudo service docker restart

install:
  - docker run --rm --privileged multiarch/qemu-user-static:register
  - curl -sLO https://github.com/multiarch/qemu-user-static/releases/download/v${qemu_version}/qemu-${qemu_arch}-static.tar.gz;
  - tar -xzvf qemu-${qemu_arch}-static.tar.gz;
  - curl -sLO https://github.com/prometheus/prometheus/releases/download/v${target_version}/sha256sums.txt
  - curl -sLO https://github.com/prometheus/prometheus/releases/download/v${target_version}/prometheus-${target_version}.${target_platform}-${target_arch}.tar.gz;
  - if [ ! -z "$(sha256sum -c sha256sums.txt 2> /dev/null | grep OK)" ]; then
      tar -xzvf prometheus-${target_version}.${target_platform}-${target_arch}.tar.gz;
      cp -r prometheus-${target_version}.${target_platform}-${target_arch}/* .;
    fi;
  - rm prometheus-${target_version}.${target_platform}-${target_arch}.tar.gz
  - rm -rf prometheus-${target_version}.${target_platform}-${target_arch}
  - rm sha256sums.txt
  - docker build -f Dockerfile.${target_arch} -t ndanyluk/prometheus-${target_arch}:$TRAVIS_BUILD_NUMBER .

script:
  - sudo docker run -d --name prometheus ndanyluk/prometheus-${target_arch}:$TRAVIS_BUILD_NUMBER
  - sleep 5
  - sudo docker ps | grep -q prometheus

after_success:
  - if [ -z "$DOCKER_USER" ]; then
      echo "PR build, skipping Docker Hub push";
    elif [ "$TRAVIS_BRANCH" != "master" ]; then
      echo "Branch build, skipping Docker Hub push";
    else
      docker login -u "$DOCKER_USER" -p "$DOCKER_PASS";
      docker tag ndanyluk/prometheus-${target_arch}:$TRAVIS_BUILD_NUMBER ndanyluk/prometheus-${target_arch}:${target_version};
      docker tag ndanyluk/prometheus-${target_arch}:$TRAVIS_BUILD_NUMBER ndanyluk/prometheus-${target_arch}:latest;
      docker push ndanyluk/prometheus-${target_arch}:${target_version};
      docker push ndanyluk/prometheus-${target_arch}:latest;
    fi

jobs:
  include:
    - stage: deploy
      install: skip
      script: skip
      after_success:
        - if [ -z "$DOCKER_USER" ]; then
            echo "PR build, skipping Docker Hub push";
          elif [ "$TRAVIS_BRANCH" != "master" ]; then
            echo "Branch build, skipping Docker Hub push";
          else
            docker login -u "$DOCKER_USER" -p "$DOCKER_PASS";
            docker manifest create ndanyluk/prometheus:${target_version} ndanyluk/prometheus-armv6:${target_version} ndanyluk/prometheus-arm64:${target_version} ndanyluk/prometheus-amd64:${target_version};
            docker manifest create ndanyluk/prometheus:latest ndanyluk/prometheus-armv6:latest ndanyluk/prometheus-arm64:latest ndanyluk/prometheus-amd64:latest;
            docker manifest push ndanyluk/prometheus:${target_version};
            docker manifest push ndanyluk/prometheus:latest;
          fi
